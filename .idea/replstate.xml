<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1412832825228">{:repl-history {:ide [], :local [&quot;(s/run-server)&quot; &quot;(cemerick/)&quot; &quot;(require '[webapp.server :as s])&quot; &quot;(s/run-dev-server)&quot; &quot;(require '[webapp.server])&quot; &quot;(server)&quot; &quot;()&quot; &quot;(require '[webapp.server :as server])&quot; &quot;(server/run-dev-server)&quot; &quot;(require 'webapp.server)&quot; &quot;(defn foo [x] x)&quot; &quot;(foo 2)&quot; &quot;(js/alert \&quot;Krishna\&quot;)&quot; &quot;:cljs.quite&quot; &quot;:cljs.quit&quot; &quot;(-&gt; 1 +)&quot; &quot;(-&gt; 1 (2 +) (3 *))&quot; &quot;(webapp.server/run-dev-server\n  )&quot; &quot;(pst)&quot; &quot;(log \&quot;Loaded\&quot;)&quot; &quot;(+ 1 2 )&quot; &quot;(by \&quot;content\&quot;)&quot; &quot;(require '[webapp.client :refer :all])&quot; &quot;(webapp.client/log \&quot;Hello\&quot;\n                   )&quot; &quot;(webapp.client/by \&quot;content\&quot;)&quot; &quot;(swap! webapp.client/app-state :list \&quot;Item 1\&quot;)&quot; &quot;(webapp.client/app-state)&quot; &quot;webapp.client/app-state&quot; &quot;(swap! webapp.client/app-state :list [\&quot;Item 1\&quot;])&quot; &quot;(swap! webapp.client/app-state assoc :list [\&quot;Item 1\&quot;])&quot; &quot;(swap! webapp.client/app-state assoc-in :list \&quot;Item 2\&quot;)&quot; &quot;(swap! webapp.client/app-state assoc :list [\&quot;Item 1\&quot; \&quot;Item 2\&quot;])&quot; &quot;(cemerick.austin.repls/exec\n  )&quot; &quot;(require '[om.core :as om :include-macros true])&quot; &quot;(require [om.core :as om :include-macros true])&quot; &quot;(om.core/root\n  (fn [app owner]\n      (om.dom/h1 nil \&quot;Welcome\&quot;))\n  {}\n  {:target (webapp.client/by \&quot;content\&quot;)})&quot; &quot;(om.core/root\n  (fn [app owner]\n      (om.core/component \n        (om.dom/h1 nil \&quot;Welcome\&quot;)))\n  {}\n  {:target (webapp.client/by \&quot;content\&quot;)})&quot; &quot;(om.core/root\n  (fn [app owner]\n      (om.core/component \n        (om.dom/input {type: \&quot;text\&quot;} \&quot;Welcome\&quot;)))\n  {}\n  {:target (webapp.client/by \&quot;content\&quot;)})&quot; &quot;(om.core/root\n  (fn [app owner]\n      (om.core/component \n        (om.dom/div js# {:classname \&quot;row\&quot;}\n              (om.dom/input {type: \&quot;text\&quot;}))))\n  {}\n  {:target (webapp.client/by \&quot;content\&quot;)})&quot; &quot;(om.core/root\n  (fn [app owner]\n      (om.core/component \n        (om.dom/div {:classname \&quot;row\&quot;}\n              (om.dom/input {type: \&quot;text\&quot;}))))\n  {}\n  {:target (webapp.client/by \&quot;content\&quot;)})&quot; &quot;(om.core/root\n  (fn [app owner]\n      (om.core/component \n        (om.dom/div {:className \&quot;row\&quot;}\n              (om.dom/input {type: \&quot;text\&quot;}))))\n  {}\n  {:target (webapp.client/by \&quot;content\&quot;)})&quot; &quot;#js &quot; &quot;(om.core/root\n  (fn [app owner]\n      (om.core/component \n        (om.dom/div #js {:className \&quot;row\&quot;}\n              (om.dom/input {type: \&quot;text\&quot;}))))\n  {}\n  {:target (webapp.client/by \&quot;content\&quot;)})&quot; &quot;(om.core/root\n  (fn [app owner]\n      (om.core/component \n        (om.dom/div #js {:className \&quot;row\&quot;}\n              (om.dom/input #js {:type \&quot;text\&quot; :placeholder \&quot;Email\&quot;}))))\n  {}\n  {:target (webapp.client/by \&quot;content\&quot;)})&quot; &quot;(om.core/root\n  (fn [app owner]\n      (om.core/component \n        (om.dom/div #js {:className \&quot;col-lg-9\&quot;}\n              (om.dom/input #js {:type \&quot;text\&quot; :placeholder \&quot;Email\&quot;}))))\n  {}\n  {:target (webapp.client/by \&quot;content\&quot;)})&quot; &quot;Enter&quot; &quot;(om.core/root\n  (fn [app owner]\n      (om.core/component \n        (om.dom/div #js {:className \&quot;col-lg-9\&quot;}\n              (om.dom/input #js {:type \&quot;text\&quot; :placeholder \&quot;Enter your email\&quot;}))))\n  {}\n  {:target (webapp.client/by \&quot;content\&quot;)})&quot; &quot;(om.core/root\n  (fn [app owner]\n      (om.core/component \n        (om.dom/div #js {:className \&quot;col-lg-9\&quot;}\n              (om.dom/input #js {:type \&quot;text\&quot; :placeholder \&quot;Enter your email\&quot;})\n              (om.dom/input #js {:type \&quot;text\&quot; :placeholder \&quot;Enter your email\&quot;}))))\n  {}\n  {:target (webapp.client/by \&quot;content\&quot;)})&quot; &quot;(om.core/root\n  (fn [app owner]\n      (om.core/component \n        (om.dom/div #js {:className \&quot;col-lg-9\&quot;}\n              (om.dom/input #js {:type \&quot;text\&quot; :placeholder \&quot;Email Address\&quot; :className \&quot;col-lg-9\&quot;})\n              (om.dom/input #js {:type \&quot;password\&quot; :placeholder \&quot;Password\&quot;}))))\n  {}\n  {:target (webapp.client/by \&quot;content\&quot;)})&quot; &quot;(om.core/root\n  (fn [app owner]\n      (om.core/component \n        (om.dom/div nil\n              (om.dom/input #js {:type \&quot;text\&quot; :placeholder \&quot;Email Address\&quot; :className \&quot;col-lg-9\&quot;})\n              (om.dom/input #js {:type \&quot;password\&quot; :placeholder \&quot;Password\&quot; :className \&quot;col-lg-9\&quot;}))))\n  {}\n  {:target (webapp.client/by \&quot;content\&quot;)})&quot; &quot;(om.core/root\n  (fn [app owner]\n      (om.core/component \n        (om.dom/div #js {:className \&quot;col-lg-9\&quot;}\n              (om.dom/input #js {:type \&quot;text\&quot; :placeholder \&quot;Email Address\&quot; :className \&quot;row\&quot;})\n              (om.dom/input #js {:type \&quot;password\&quot; :placeholder \&quot;Password\&quot; :className \&quot;row\&quot;}))))\n  {}\n  {:target (webapp.client/by \&quot;content\&quot;)})&quot; &quot;(om.core/root\n  (fn [app owner]\n      (om.core/component \n        (om.dom/div #js {:className \&quot;col-lg-9\&quot;}\n              (om.dom/input #js {:type \&quot;text\&quot; :placeholder \&quot;Email Address\&quot;})\n              (om.dom/input #js {:type \&quot;password\&quot; :placeholder \&quot;Password\&quot;}))))\n  {}\n  {:target (webapp.client/by \&quot;content\&quot;)})&quot; &quot;(def state (atom {:username \&quot;\&quot; :password \&quot;\&quot;}))&quot; &quot;(om.core/root\n  (fn [app owner]\n      (om.core/component \n        (om.dom/div #js {:className \&quot;col-lg-9\&quot;}\n              (om.dom/input #js {:type \&quot;text\&quot; :placeholder \&quot;Email Address\&quot;})\n              (om.dom/input #js {:type \&quot;password\&quot; :placeholder \&quot;Password\&quot;}))))\n  state\n  {:target (webapp.client/by \&quot;content\&quot;)})&quot; &quot;(om.core/root\n  (fn [app owner]\n    (om.core/component\n      (om.dom/div #js {:className \&quot;col-lg-9\&quot;}\n          (om.dom/input #js {:type \&quot;text\&quot; :placeholder \&quot;Email Address\&quot;})\n          (om.dom/p nil)\n          (om.dom/input #js {:type \&quot;password\&quot; :placeholder \&quot;Password\&quot;})\n          (om.dom/p nil)\n          (dom/button\n            #js {:className \&quot;btn btn-default\&quot;\n                 :onClick #(println \&quot;\&quot;)}\n            \&quot;Login\&quot;))))\n  state\n  {:target (webapp.client/by \&quot;content\&quot;)})&quot; &quot;(om.core/root\n  (fn [app owner]\n    (om.core/component\n      (om.dom/div #js {:className \&quot;col-lg-9\&quot;}\n          (om.dom/input #js {:type \&quot;text\&quot; :placeholder \&quot;Email Address\&quot;})\n          (om.dom/p nil)\n          (om.dom/input #js {:type \&quot;password\&quot; :placeholder \&quot;Password\&quot;})\n          (om.dom/p nil)\n          (dom/button\n            #js {:className \&quot;btn btn-default\&quot;\n                 :onClick #(println \&quot;Clicked\&quot;)}\n            \&quot;Login\&quot;))))\n  state\n  {:target (webapp.client/by \&quot;content\&quot;)})&quot; &quot;(om.core/root\n  (fn [app owner]\n    (om.core/component\n      (om.dom/div #js {:className \&quot;col-lg-9\&quot;}\n          (om.dom/input #js {:type \&quot;text\&quot; :placeholder \&quot;Email Address\&quot;})\n          (om.dom/p nil)\n          (om.dom/input #js {:type \&quot;password\&quot; :placeholder \&quot;Password\&quot;})\n          (om.dom/p nil)\n          (dom/button\n            #js {:className \&quot;btn btn-default\&quot;\n                 :onClick #(println \&quot;Clicked\&quot;)}\n            \&quot;Logged In\&quot;))))\n  state\n  {:target (webapp.client/by \&quot;content\&quot;)})&quot; &quot;Clicked&quot; &quot;(om.core/root\n  (fn [app owner]\n    (om.core/component\n      (om.dom/div #js {:className \&quot;col-lg-9\&quot;}\n          (om.dom/input #js {:type \&quot;text\&quot; :placeholder \&quot;Email Address\&quot;})\n          (om.dom/p nil)\n          (om.dom/input #js {:type \&quot;password\&quot; :placeholder \&quot;Password\&quot;})\n          (om.dom/p nil)\n          (dom/button\n            #js {:className \&quot;btn btn-default\&quot;\n                 :onClick #(println \&quot;\&quot;)}\n            \&quot;Logged In\&quot;))))\n  state\n  {:target (webapp.client/by \&quot;content\&quot;)})&quot; &quot;(+ 1 2 3)&quot; &quot;(om.core/root\n  (fn [app owner]\n    (om.core/component\n      (om.dom/div #js {:className \&quot;col-lg-9\&quot;}\n          (om.dom/input #js {:type \&quot;text\&quot; :placeholder \&quot;Email Address\&quot;})\n          (om.dom/p nil)\n          (om.dom/input #js {:type \&quot;password\&quot; :placeholder \&quot;Password\&quot;})\n          (om.dom/p nil)\n          (dom/button\n            #js {:className \&quot;btn btn-default\&quot;\n                 :onClick #(println \&quot;clicked\&quot;)}\n            \&quot;Logged In\&quot;))))\n  app-state\n  {:target (webapp.client/by \&quot;content\&quot;)})&quot; &quot;(om.core/root\n  (fn [app owner]\n    (om.core/component\n      (om.dom/div #js {:className \&quot;col-lg-9\&quot;}\n          (om.dom/input #js {:type \&quot;text\&quot; :placeholder \&quot;Email Address\&quot;})\n          (om.dom/p nil)\n          (om.dom/input #js {:type \&quot;password\&quot; :placeholder \&quot;Password\&quot;})\n          (om.dom/p nil)\n          (om.dom/button\n            #js {:className \&quot;btn btn-default\&quot;\n                 :onClick #(println \&quot;clicked\&quot;)}\n            \&quot;Logged In\&quot;))))\n  app-state\n  {:target (webapp.client/by \&quot;content\&quot;)})&quot; &quot;(om.core/root\n  (fn [app owner]\n    (om.core/component\n      (om.dom/div #js {:className \&quot;col-lg-9\&quot;}\n          (om.dom/input #js {:type \&quot;text\&quot; :placeholder \&quot;Email Address\&quot;})\n          (om.dom/p nil)\n          (om.dom/input #js {:type \&quot;password\&quot; :placeholder \&quot;Password\&quot;})\n          (om.dom/p nil)\n          (om.dom/button\n            #js {:className \&quot;btn btn-default\&quot;\n                 :onClick #(log \&quot;Krishna\&quot;)}\n            \&quot;Logged In\&quot;))))\n  app-state\n  {:target (webapp.client/by \&quot;content\&quot;)})&quot; &quot;(om.core/root\n  (fn [app owner]\n    (om.core/component\n      (om.dom/div #js {:className \&quot;col-lg-9\&quot;}\n          (om.dom/input #js {:type \&quot;text\&quot; :placeholder \&quot;Email Address\&quot;})\n          (om.dom/p nil)\n          (om.dom/input #js {:type \&quot;password\&quot; :placeholder \&quot;Password\&quot;})\n          (om.dom/p nil)\n          (om.dom/button\n            #js {:className \&quot;btn btn-default\&quot;\n                 :onClick #(webapp.client/log \&quot;Krishna\&quot;)}\n            \&quot;Logged In\&quot;))))\n  app-state\n  {:target (webapp.client/by \&quot;content\&quot;)})&quot; &quot;(+ 1 2)&quot; &quot;(def app-state\n  (atom\n    {:contacts\n      [{:first \&quot;Ben\&quot; :last \&quot;Bitdiddle\&quot; :email \&quot;benb@mit.edu\&quot;}\n       {:first \&quot;Alyssa\&quot; :middle-initial \&quot;P\&quot; :last \&quot;Hacker\&quot; :email \&quot;aphacker@mit.edu\&quot;}\n       {:first \&quot;Eva\&quot; :middle \&quot;Lu\&quot; :last \&quot;Ator\&quot; :email \&quot;eval@mit.edu\&quot;}\n       {:first \&quot;Louis\&quot; :last \&quot;Reasoner\&quot; :email \&quot;prolog@mit.edu\&quot;}\n       {:first \&quot;Cy\&quot; :middle-initial \&quot;D\&quot; :last \&quot;Effect\&quot; :email \&quot;bugs@mit.edu\&quot;}\n       {:first \&quot;Lem\&quot; :middle-initial \&quot;E\&quot; :last \&quot;Tweakit\&quot; :email \&quot;morebugs@mit.edu\&quot;}]}))&quot; &quot;(defn contact-view [app owner]\n      (reify \n        om.core/IRender \n        (render [this]\n          (om.dom/li nil (display-name app)))))&quot; &quot;(defn contacts-view [app owner]\n      (reify \n        om.core/IRender\n        (render [this]\n          (om.dom/div nil\n              (om.dom/h1 \&quot;Contact List\&quot;)\n                (apply om.dom/ul nil\n                       (om.dom/build-all contact-view (:contacts app)))))))&quot; &quot;(om.core/root\n  \n  contacts-view app-state\n  {:target (webapp.client/by \&quot;content\&quot;)})&quot; &quot;(defn contacts-view [app owner]\n      (reify \n        om.core/IRender\n        (render [this]\n          (om.dom/div nil\n              (om.dom/h1 \&quot;Contact List\&quot;)\n                (apply om.dom/ul nil\n                       (om.core/build-all contact-view (:contacts app)))))))&quot; &quot;(om.core/root\n  contacts-view app-state\n  {:target (webapp.client/by \&quot;content\&quot;)})&quot; &quot;(om.core/root\n  contacts-view webapp.client/app-state\n  {:target (webapp.client/by \&quot;content\&quot;)})&quot; &quot;(om.core/root\n  webapp.client/contacts-view webapp.client/app-state\n  {:target (webapp.client/by \&quot;content\&quot;)})&quot; &quot;(webapp.server/run-dev-server)&quot; &quot;(run-dev-server)&quot; &quot;(cemerick.austin.repls/exec)&quot;], :remote []}}</component>
</project>

